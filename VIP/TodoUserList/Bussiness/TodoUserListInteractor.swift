//
//  TodoUserListInteractor.swift
//  VIP
//
//  Created by Mohamed El-Taweel on 9/1/20.
//  Copyright (c) 2020 Learning. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TodoUserListBusinessLogic
{
  func getTodoUsers()
    func getTodoUser(from index: Int)
}

protocol TodoUserListDataStore
{
    var usersResponse: UserListResponse? {get set}
    var selectedUser: User? {get set}
}

typealias TodoUserListInteractoring = TodoUserListBusinessLogic & TodoUserListDataStore

class TodoUserListInteractor: TodoUserListInteractoring
{
  var usersResponse: UserListResponse?
  var selectedUser: User?
  var presenter: TodoUserListPresentationLogic?
  var worker: TodoUserListWorking?

  
  // MARK: Do something
  
  func getTodoUsers()
  {
    presenter?.presentLoading()
    worker?.getUserList(onSuccess: {[weak self] (users) in
        guard let weakSelf = self else{ return }
        weakSelf.usersResponse = users
        weakSelf.presenter?.presentTodoUsers(with: users)
    }, onFailure: {[weak self] (error) in
        guard let weakSelf = self else{ return }
        weakSelf.presenter?.presentError(with: error)
    })
  }
    
    func getTodoUser(from index: Int) {
        guard let users = self.usersResponse else{ return }
        self.selectedUser = users[index]
        self.presenter?.presentUserTodos()
    }
    
   
}
