//
//  TodoUserListViewController.swift
//  VIP
//
//  Created by Mohamed El-Taweel on 9/1/20.
//  Copyright (c) 2020 Learning. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import KRProgressHUD

protocol TodoUserListViewable: class {
    func showLoading()
    func showError(with message: String)
    func showUsers(with viewModels: [TodoUserTableCellViewModel])
    func showUserTodos()
}


class TodoUserListViewController: UIViewController
{
    
    @IBOutlet weak var todoUserTableView: UITableView!
    
    var interactor: TodoUserListBusinessLogic?
    var router: (NSObjectProtocol & TodoUserListRoutingLogic & TodoUserListDataPassing)?
    var todoUsersTableViewModels = [TodoUserTableCellViewModel]()
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(true)
        interactor?.getTodoUsers()
    }
    
    private func setup()
    {
        let viewController = self
        let interactor = TodoUserListInteractor()
        let presenter = TodoUserListPresenter()
        let router = TodoUserListRouter()
        let worker = GetAPIUserListWorker()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        interactor.worker = worker
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
}


extension TodoUserListViewController: TodoUserListViewable{
    
    func showLoading() {
        KRProgressHUD.show()
    }
    
    func showError(with message: String) {
        KRProgressHUD.dismiss()
        KRProgressHUD.showError(withMessage: message)
    }
    
    func showUsers(with viewModels: [TodoUserTableCellViewModel]) {
        self.todoUsersTableViewModels = viewModels
        self.todoUserTableView.reloadData()
        KRProgressHUD.dismiss()
    }
    
    func showUserTodos() {
        self.router?.routeToUserTodos()
    }
    
}

extension TodoUserListViewController: UITableViewDelegate,UITableViewDataSource{
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        interactor?.getTodoUser(from: indexPath.row)
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return todoUsersTableViewModels.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: TodoUserTableViewCell.IDENTIFIER, for: indexPath) as! TodoUserTableViewCell
        cell.config(with: todoUsersTableViewModels[indexPath.row])
        return cell
    }
    
    func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {
        cell.alpha = 0
        UIView.animate(
            withDuration: 0.5,
            delay: 0.05 * Double(indexPath.row),
            animations: {
                cell.alpha = 1
        })
    }
    
}
